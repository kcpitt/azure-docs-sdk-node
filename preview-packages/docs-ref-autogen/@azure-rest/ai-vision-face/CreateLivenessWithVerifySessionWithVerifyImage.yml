### YamlMime:TSType
name: CreateLivenessWithVerifySessionWithVerifyImage
uid: '@azure-rest/ai-vision-face.CreateLivenessWithVerifySessionWithVerifyImage'
package: '@azure-rest/ai-vision-face'
summary: ''
fullName: CreateLivenessWithVerifySessionWithVerifyImage
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: get(GetLivenessWithVerifySessionsParameters)
    uid: >-
      @azure-rest/ai-vision-face.CreateLivenessWithVerifySessionWithVerifyImage.get
    package: '@azure-rest/ai-vision-face'
    summary: |-
      List sessions from the last sessionId greater than the "start".

      The result should be ordered by sessionId in ascending order.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(options?: GetLivenessWithVerifySessionsParameters):
        StreamableMethod<GetLivenessWithVerifySessions200Response |
        GetLivenessWithVerifySessionsDefaultResponse>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure-rest/ai-vision-face.GetLivenessWithVerifySessionsParameters"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/core-client.StreamableMethod" />&lt;<xref
          uid="@azure-rest/ai-vision-face.GetLivenessWithVerifySessions200Response"
          /> | <xref
          uid="@azure-rest/ai-vision-face.GetLivenessWithVerifySessionsDefaultResponse"
          />&gt;
  - name: post(CreateLivenessWithVerifySessionParameters)
    uid: >-
      @azure-rest/ai-vision-face.CreateLivenessWithVerifySessionWithVerifyImage.post_1
    package: '@azure-rest/ai-vision-face'
    summary: >-
      A session is best for client device scenarios where developers want to
      authorize a client device to perform only a liveness detection without
      granting full access to their resource. Created sessions have a limited
      life span and only authorize clients to perform the desired action before
      access is expired.


      Permissions includes...

      >

      *
        * Ability to call /detectLivenessWithVerify/singleModal for up to 3 retries.
        * A token lifetime of 10 minutes.

      > [!NOTE]

      >

      > *

      >   * Client access can be revoked by deleting the session using the
      Delete Liveness With Verify Session operation.

      >   * To retrieve a result, use the Get Liveness With Verify Session.

      >   * To audit the individual requests that a client has made to your
      resource, use the List Liveness With Verify Session Audit Entries.


      Alternative Option: Client device submits VerifyImage during the
      /detectLivenessWithVerify/singleModal call.

      > [!NOTE]

      > Extra measures should be taken to validate that the client is sending
      the expected VerifyImage.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function post(options?: CreateLivenessWithVerifySessionParameters):
        StreamableMethod<CreateLivenessWithVerifySession200Response |
        CreateLivenessWithVerifySessionDefaultResponse>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure-rest/ai-vision-face.CreateLivenessWithVerifySessionParameters"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/core-client.StreamableMethod" />&lt;<xref
          uid="@azure-rest/ai-vision-face.CreateLivenessWithVerifySession200Response"
          /> | <xref
          uid="@azure-rest/ai-vision-face.CreateLivenessWithVerifySessionDefaultResponse"
          />&gt;
  - name: post(CreateLivenessWithVerifySessionWithVerifyImageParameters)
    uid: >-
      @azure-rest/ai-vision-face.CreateLivenessWithVerifySessionWithVerifyImage.post
    package: '@azure-rest/ai-vision-face'
    summary: >-
      A session is best for client device scenarios where developers want to
      authorize a client device to perform only a liveness detection without
      granting full access to their resource. Created sessions have a limited
      life span and only authorize clients to perform the desired action before
      access is expired.


      Permissions includes...

      >

      *
        * Ability to call /detectLivenessWithVerify/singleModal for up to 3 retries.
        * A token lifetime of 10 minutes.

      > [!NOTE]

      >

      > *

      >   * Client access can be revoked by deleting the session using the
      Delete Liveness With Verify Session operation.

      >   * To retrieve a result, use the Get Liveness With Verify Session.

      >   * To audit the individual requests that a client has made to your
      resource, use the List Liveness With Verify Session Audit Entries.


      Recommended Option: VerifyImage is provided during session creation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function post(options:
        CreateLivenessWithVerifySessionWithVerifyImageParameters):
        StreamableMethod<CreateLivenessWithVerifySessionWithVerifyImage200Response
        | CreateLivenessWithVerifySessionWithVerifyImageDefaultResponse>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure-rest/ai-vision-face.CreateLivenessWithVerifySessionWithVerifyImageParameters"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/core-client.StreamableMethod" />&lt;<xref
          uid="@azure-rest/ai-vision-face.CreateLivenessWithVerifySessionWithVerifyImage200Response"
          /> | <xref
          uid="@azure-rest/ai-vision-face.CreateLivenessWithVerifySessionWithVerifyImageDefaultResponse"
          />&gt;
